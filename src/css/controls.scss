@use 'img-langs.scss'  as lang;
@use 'img-styles.scss' as style;
@use './mixins.scss' as m;

#map {
  // popup
  div.leaflet-popup {
    h4, table {
      margin: 1em 0;
    }
    table th, table td {
      vertical-align: top;
    }
    // screenshots
    .pine-screenshot {
      text-align: center;
      > div {
        position: relative;
        display: inline-block;
        overflow: hidden;
        z-index: 1;
        > iframe {
          overflow: hidden;
          width: 240px;
          height: 240px;
          max-width: 240px;
          max-height: 240px;
          border: 0;
          background: repeating-linear-gradient(
            -45deg,
            transparent 0,
            transparent 5px,
            rgba(1, 1, 1, 0.1) 5px,
            rgba(1, 1, 1, 0.1) 10px
          );
        }
        // loading text
        &::before {
          content: 'image';
          position: absolute;
          display: block;
          z-index: -1;
          width: 100%;
          top: 50%;
          margin-top: -1em;
          font-size: 2.5em;
          letter-spacing: 0.05em;
          color: rgba(1, 1, 1, 0.2);
        }
      }
    }
    // buttons
    button {
      height: 27px;
      cursor: pointer;
      border-radius: 6px;
      border: 0;
      padding: 5px 10px;
      margin-right: 5px;
      &:focus {
        outline: 0;
      }
    }
    // mark not completed
    div.pine-popup.pine-poi-seen > button > span {
      display: inline-block;
      -webkit-transform: rotate(-180deg);
         -moz-transform: rotate(-180deg);
           -o-transform: rotate(-180deg);
              transform: rotate(-180deg);
    }
  }

  // controls
  div.leaflet-control {
    // language
    &.leaflet-languageselector-control {
      .leaflet-languageselector-langdiv {
        font-size: 0;
      }
      @each $lang in lang.$langs-sprites {
        $key: nth($lang, 10);
        #languageselector_#{$key} {
          @include m.scaled($lang, 0.8);
        }
        &[data-selected="#{$key}"] {
          #languageselector_#{$key} {
            filter: saturate(0.5);
            opacity: 0.5;
            cursor: default;
          }
        }
      }
    }
    // style
    &.pine-style {
      background-color: white;
      > div {
        display: inline-block;
        box-sizing: border-box;
        cursor: pointer;
        padding: 4px;
        width: 26px;
        height: 26px;
        &:not(:last-of-type) {
          border-right: 1px solid #ccc;
        }
        & > span {
          display: inline-block;
        }
      }
    }
    // mouse coordinates
    &.pine-mouse-coordinates {
      cursor: default;
      background-color: white;
      font-weight: bold;
      padding: 6px;
    }
  }

  // layer control
  div.leaflet-panel-layers {
    border-radius: 4px;
    // Map Title
    > label.leaflet-panel-layers-title {
      font-size: 1.3em;
    }
    // content without title (scrollable)
    form.leaflet-panel-layers-list {
      height: unset !important;
      max-height: calc(100vh - 60px) !important;
      overflow-y: auto;
      // hr - between maps and overlays
      div.leaflet-panel-layers-separator {
        visibility: hidden;
        margin: 0;
      }
      // overlay layer row
      label.leaflet-panel-layers-title {
        > * {
          vertical-align: middle;
        }
        // markers in controlcontrol
        i.leaflet-panel-layers-icon > i.pine-marker {
          display: inline-block;
          vertical-align: middle;
        }
      }
    }
  }
}

// style
@each $sprite in style.$styles-sprites {
  $dynamic : nth($sprite, 10);
  $pos     : str-index($dynamic, "-");
  $key     : str-slice($dynamic, 1, $pos - 1);
  $state   : str-slice($dynamic, $pos + 1);
  #map[data-#{$key}=#{$state}] div.pine-style > div.pine-style-#{$key} > span {
    @include m.scaled($sprite, 18/32);
  }
}
